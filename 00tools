function getStyle(obj, attribute) {
  return getComputedStyle ? getComputedStyle(obj, null)[attribute] : obj.currentStyle[attribute];
}

function getScroll(str){
  var html = document.documentElement;
  var body = document.body;
  str = str.replace(str[0], str[0].toUpperCase());
  return body["scroll"+str] || html["scroll"+str];
}

//obj应当设置了position
function drag(obj) {
  obj.onmousedown = function (event) {
    obj.setCapture && obj.setCapture();
    event = event || window.event;
    var left = obj.offsetLeft;
    var top = obj.offsetTop;
    var clientX = event.clientX + getScroll("Left");
    var clientY = event.clientY + getScroll("Top");
    document.onmousemove = function (event) {
      event = event || window.event;
      obj.style.left = event.clientX + getScroll("Left") - clientX + left + "px";
      obj.style.top = event.clientY + getScroll("Top") - clientY + top + "px";
    };
    document.onmouseup = function () {
      document.onmousemove = null;
      document.onmouseup = null;
      obj.releaseCapture && obj.releaseCapture();
    };
    return false;
  };
}

function move(obj, attribute ,target, speed, callback) {
  //判断移动方向
  var origin = parseInt(getStyle(obj, attribute));
  speed = target < origin ? -speed : speed;
  obj.timer = setInterval(function () {
    var current = parseInt(getStyle(obj, attribute)) + speed;
    //如果终点位置大于起点位置，则当移动到大于终点位置处时，终止移动，并使当前位置等于终点位置
    //如果终点位置小于起点位置，则当移动到小于终点位置处时，终止移动，并使当前位置等于终点位置
    //综上，两种情况可统一为一个条件：（终点位置-起点位置）*（当前位置-终点位置）> 0，终止移动，使当前位置 = 终点位置
    let flag = (target - origin) * (current - target) >= 0 ;
    obj.style[attribute] = flag ? target + "px" : current + "px";
    if(flag){
      clearInterval(obj.timer);
      callback && callback();
    }
  },30);
}

function hasClass(obj, className) {
  var reg = new RegExp("\\b"+className+"\\b");
  return reg.test(obj.className)
}

function addClass(obj, className) {
  if(!hasClass(obj, className)){
    obj.className += " " + className;
  }
}

function removeClass(obj, className) {
  var reg = new RegExp("\\b"+className+"\\b");
  obj.className = obj.className.replace(reg, "");
}

function toggleClass(obj, className) {
  if(! hasClass(obj, className)){
    addClass(obj, className);
  }else{
    removeClass(obj, className);
  }
}
