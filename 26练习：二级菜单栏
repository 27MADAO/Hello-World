<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>二级菜单栏</title>
  <link type="text/css" rel="stylesheet" href="../css/menu.css"/>
  <script type="text/javascript" src="../js/tools.js"></script>
  <script type="text/javascript">
    /*
     * 思路：将页面样式写为完全打开，通过修改height并设置overflow隐藏内容来实现关闭效果。
     *       添加.C样式，再通过添加类名C来修改高度。
     *       即，打开标题，去掉类名C。关闭标题，添加类名C
     */
    window.onload = function () {
      var spanList = document.getElementsByTagName("span");
      //默认状态，设置当前打开的标题为第一个
      var openNode = spanList[0].parentNode;
      //.collapsed设置了height和overflow，通过增删类名collapsed实现关闭打开效果
      var closeClass = "collapsed";

      for(var i = 0; i < spanList.length; i++){
        spanList[i].onclick = function () {
          //对当前点击的标题进行处理，调换打开/关闭
          toggleMenu(this.parentNode);
          //关闭前一个打开的标题
          /*
          // 连续两次点击同一个打开状态的标题，理想效果应该是：打开（初始状态）=> 关闭（一次点击） => 打开（二次点击）
          // 此期间openNode == parentNode对应同一个标题，期间会出现：
          //    无closeClass（初始状态）=>
          //    toggleClass添加closeClass，addClass无作用（一次点击）=>
          //    toggleClass删除closeClass，addClass添加closeClass（二次点击）
          // 即，第二次点击时，addClass会重新会标题添加上toggleClass删除的closeClass
          // 所以此处应该判断addClass要添加closeClass的对象是不是toggleClass要去除closeClass的对象。如果是就不添加了
          // 归根究底就是addClass专门通过openNode为打开的标题添加closeClass使其关闭，而当所有标题都关闭时openNode仍保存了一个标题是打开状态。
          // 所以当去打开这个已经关闭的标题时，
          // 由于它被openNode记录为了打开状态，addClass会履行职责又去关闭它，现象上就是点击标题却打不开，事实上是标题被打开又被瞬间关闭了
          // 因此addClass执行前应该加一个判断，如果它是正要被打开的标题就不去关闭它
          */
          // if(parentNode !== openNode){
          // ↓↓↓相同，将addClass方法换为toggleClass方法方便统一添加动画
          if(this.parentNode !== openNode && !hasClass(openNode, closeClass)){
            toggleMenu(openNode);
          }
          //更新正打开的标题为当前点击的标题
          openNode = this.parentNode;
        }
      }

      function toggleMenu(obj) {
        var begin = obj.offsetHeight;
        toggleClass(obj, closeClass);
        var end = obj.offsetHeight;
        //为了执行动画，让menu暂时恢复初始高度
        obj.style.height = begin + "px";
        move(obj, "height", end, 30, function () {
          //动画执行完毕后，删除临时的内联样式
          obj.style.height = "";
        });
      }
    }
  </script>
</head>
<body>
  <div id="box">
    <ul id="menu">
      <li  class="">
        <span>标题一</span>
        <a href="javascript:;">二级标题1</a>
        <a href="javascript:;">二级标题2</a>
        <a href="javascript:;">二级标题3</a>
        <a href="javascript:;">二级标题4</a>
        <a href="javascript:;">二级标题5</a>
      </li>
      <li  class="collapsed">
        <span>标题二</span>
        <a href="javascript:;">二级标题1</a>
        <a href="javascript:;">二级标题2</a>
        <a href="javascript:;">二级标题3</a>
        <a href="javascript:;">二级标题4</a>
      </li>
      <li  class="collapsed">
        <span>标题三</span>
        <a href="javascript:;">二级标题1</a>
        <a href="javascript:;">二级标题2</a>
        <a href="javascript:;">二级标题3</a>
      </li>
      <li  class="collapsed">
        <span>标题四</span>
        <a href="javascript:;">二级标题1</a>
        <a href="javascript:;">二级标题2</a>
      </li>
    </ul>
  </div>
</body>
</html>

//menu.css
*{
    margin: 0;
    padding: 0;
}
#box{
    width: 100px;
    margin: 50px auto;
    padding: 10px 0;
    background-color: #ccc;
    border-radius: 10px;
}
ul{
    list-style-type: none;
}
li{
    border: 1px solid #000;
}
span, a{
    display: block;
    cursor: pointer;
}
span{
    height: 25px;
    font-size: 14px;
    font-weight: bold;
    color: #FFF;
    background-color: #666;
    border-bottom: 1px solid #000;
    /*垂直居中*/
    display: flex;
    align-items: center;
}
a{
    height: 20px;
    font-size: 13px;
    color: darkslategrey;
    background-color: #ccc;
    text-decoration: none;
    border-top: 1px solid #000;
    padding-left: 10px;
}
.collapsed{
    height: 25px;
    overflow: hidden;
}
li span:before{
    content: "";
    width: 0;
    height: 0;
    font-size: 0;
    line-height: 0;
    border-width: 10px 5px;
    border-style: solid;
    border-color: #fff transparent transparent transparent;
    position: relative;
    top: 5px;
    margin: auto 5px;
}
.collapsed span:before{
    content: "";
    width: 0;
    height: 0;
    font-size: 0;
    line-height: 0;
    border-width: 5px 10px;
    border-style: solid;
    border-color: transparent transparent transparent #fff;
    left: 5px;
    top: 0;
    margin: 0;
}
