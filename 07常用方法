属性节点方法：
attr("属性名"[,"属性值"]); //一个为获取，两个为设置
reomve("属性名")

属性方法：
prop(); //同attr()
removeProp(); //同removeAttr()

>>>>>操作后，基本相同，不知道除了checked、selected、disabled属性获取值返回不同外还有什么不同
     文档推荐，checked、selected、disabled之类使用prop()(返回true/false），其他用attr()
     
操作类的方法：
addClass();
removeClass();
toggleClass();

元素内容方法：
html(); //同js的innerHTML属性
text(); //同js的innerText属性
val();  //同js的value属性

样式设置方法：
css(); 
>>>>> 三种设置方式：
      1.单独设置：.css("样式名","样式值")
      2.链式设置：.css("样式名1","样式值1").css("样式名2","样式值2").css("样式名3","样式值3")......
      3.批量设置: .css({
                    样式名1："样式值1"，
                    样式名2："样式值2"，
                    样式名3："样式值3"，
                 }) //对象形式传入，方便阅读，推荐写法

样式属性相关方法：
width(); //无参获取，字符串传参设置
offset(); //left、top属性获取相对窗口偏移量，对象传参设置（无单位）
position(); //left、top属性获取想相对父定位元素偏移量
scrollTop(); //无参获取相对文档偏移量，数值传参设置（无单位）
>>>>> $("html").scrollTop() + $("body").scrollTop(); //获取文档偏移量
      $("html, body").scrollTop(xx); //设置文档偏移量
      //因为部分浏览器视滚动元素为html，部分视为body
      
 事件有关方法：
 移入移出事件：hover(func1, func2); //mouseenter+mouseleave
 事件绑定：eventName(func); //效率高
          on("event", func); //事件全
 事件移除：off(); //无参移除所有事件响应；一参("event")移除指定事件所有响应；二参("event", func)移除指定事件的指定响应
 事件委托：被委托元素.delegate("委托元素", "event", func); //将动态添加元素的事件委托给页面加载时即存在的元素（一般父元素）
 阻止冒泡：event.stopPropagation(); //或return false; 
 阻止默认：event.preventDefault(); //或return false; 
 自动触发：trigger("event"); //特例a元素会被阻止冒泡与默认行为
                              >>>>> 在a元素中添加span元素，将自动触犯事件绑定给span
          triggerHandler("event"); //阻止冒泡与默认行为的触发
 自定义事件：用on()方法绑定，配合trigger()触发 //event自定义
          
