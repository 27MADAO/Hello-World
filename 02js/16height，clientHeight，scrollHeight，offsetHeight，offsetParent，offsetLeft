<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>test</title>
  <script type="text/javascript">
    window.onload = function () {
      var btn = document.getElementById("btn");
      var parent = document.getElementById("parent");
      btn.onclick = function () {
        console.log("height:" + getComputedStyle(parent, null).height + "," +
                    "clientHeight:" + parent.clientHeight + "，" +
                    "scrollHeight:" + parent.scrollHeight + "，" +
                    "offsetHeight:" + parent.offsetHeight + "，" +
                    "offsetParent:" + parent.offsetParent + "，" +
                    "offsetLeft:" + parent.offsetLeft + "。")
        //猜想：依次是200， 240， 640， 242，box元素，5
        //结果：height:200px,clientHeight:240，scrollHeight:640，offsetHeight:242，offsetParent:[object HTMLDivElement]，offsetLeft:5。
      }
    }
  </script>
  <style type="text/css">
    #box{
      position: relative;
      padding: 5px;
      background-color: antiquewhite;
    }
    #parent{
      width: 200px;
      height: 200px;
      padding: 20px;
      border: 1px solid #000;
      background-color: cadetblue;
      overflow: auto;
    }
    #child{
      width: 100px;
      height: 600px;
      padding: 10px;
      background-color: darkseagreen;
    }
  </style>
</head>
<body>
  <button id="btn">点我一下</button>
  <br/><br/>
  <div id="box">
    <div id="parent">
      <div id="child"></div>
    </div>
  </div>
</body>
</html>

个人理解：
height: 容器可容纳内容部分的高
clientHeight: 容器内部的高，height + padding（双）
offsetHeight: 容器整体的高，height + padding（双）+ border（双）
srcollHeight: 容器与承载内容相互影响后的高
     承载内容的整体 <（height+单padding）时 ，= clientHight
     承载内容的整体 >（height+单padding）时 ，= padding（单）+ 承载内容的offsetHeight（测试时偶尔有1px的误差，不规律，暂时不知道什么原因）
offsetParent: 获取定位父元素
offsetLeft：与offsetParent的水平偏移量

     
     
