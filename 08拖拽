<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<!--
  拖拽元素绑定：
  ondragstart 拖拽开始时触发；
  ondrag 拖拽全程持续触发；
  ondragend 拖拽结束时触发；
  ondragleave 鼠标离开拖拽元素（初始区域）时触发；
  目标元素绑定：
  ondragenter 鼠标进入目标元素区域时触发；
  ondragover 鼠标在目标元素区域内时持续触发；
  ondragleave 鼠标离开目标元素区域时触发；
  ondrop 鼠标松开时触发；
  注意：
  1.浏览器默认阻止ondrop事件触发，须在ondragover事件中阻止默认行为。
    >>>>> e.preventDefault();
  2.ondrop中不要忘记添加上拖拽元素！（总忘记！）
    >>>>> 目标元素.appendChild（拖拽元素）;
  2.为了通用，可以将以上事件都绑定给document（算是委托吧），对应事件中的e.target保存了对应的拖拽元素/目标元素。
  3.尽量不使用全局变量，可以通过e.dataTransfer.setData(format , data)和e.dataTransfer.getData(format)存取数据。
    >>>>> format数据类型，可选text/html或text/uri-list； data为存储的数据，一般字符串
          （set时format我随便写，get时保持一致，没有报错仍然能取到我存的值，不明白format的作用）
    >>>>> ondragstart中setData，ondrop中getData
-->
  <title>拖拽</title>
  <script>
    window.onload = function () {
      document.ondragstart = function (e) {
        //ondragstart事件由拖拽元素触发，所以这里的e.target指向拖拽元素
        //  存储拖拽元素class
        e.dataTransfer.setData("text/html", e.target.className);
        // e.dataTransfer.setData("abcde", 12345);
      };
      document.ondragover = function (e) {
        //ondrop事件由目标元素触发，所以这里的e.target指向目标元素
        e.preventDefault()
      };
      document.ondrop = function (e) {
        //ondrop事件由目标元素触发，所以这里的e.target指向目标元素
        // 取出拖拽元素class
        var className =  e.dataTransfer.getData("text/html");
        // 通过class找到拖拽元素
        var dragItem = document.querySelector("."+className);
        // 在目标元素中添加拖拽元素
        e.target.appendChild(dragItem);
        // var testData =  e.dataTransfer.getData("abcde");
        // console.log(testData);
      };
    }
  </script>
  <style>
    *{
      margin: 0;
      padding: 0;
    }
    div{
      width: 100px;
      height: 100px;
      border: 2px solid red;
      float: left;
    }
    .targetItem{
      border-color: orange;
      margin-left: 20px;
    }
    p{
      background: green;
    }
  </style>
</head>
<body>
  <div class="box">
    <p class="dragItem" draggable="true">这是一个被拖动元素</p>
  </div>
  <div class="targetItem" draggable="true"></div>
</body>
</html>
